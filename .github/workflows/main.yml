name: Test-Build
on:
  push:
    branches:
      - main
      
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false 
      
      
jobs:
 websites-tests:
    runs-on: ubuntu-latest
          
          
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      # INstall Node on the runner
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - run: npm i npm@latest
      - run: npm i
      

      # Install the newman command line utility and also install the html extra reporter
      #- name: Install newman
      #  run: |
      #    npm install -g newman
      #    npm install -g newman-reporter-htmlextra

      # Install webdriver.io
      - name: Install webdriver.io
        run: npm init wdio ./telnux_webdriverio

      # Install allure webdriverIO package from npm
      - name: Install allure webdriverIO package from npm
        run: npm install @wdio/allure-reporter --save-dev

      # Install Allure-reporter
      - name: Install Allure-reporter
        run: npm i allure-commandline

      # Run webdriver.io
      - name: Run webdriver.io
        run: npm run wdio 

      # Run Allure-reporter
      - name: Run Allure-reporter
        run: npm run allurereport
     
          
      # Upload the contents of Test Results directory to workspace
      - name: Output the run Details
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
          
 deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: websites-tests
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
